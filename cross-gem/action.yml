---
name: "Cross Gem"
description: "A GitHub action to cross-compile a Ruby gem for multiple platforms using `rb-sys-dock`."
author: "Ian Ker-Seymer"
branding:
  icon: "download-cloud"
  color: "gray-dark"
inputs:
  platform:
    description: "The platform to cross-compile for (e.g. `x86_64-linux`)"
    required: true
  ruby-versions:
    description: "The Ruby versions to cross-compile for (e.g. `2.7,3.0,3.1`)"
    default: "default"
  cache-version:
    default: "v0"
    description: "Arbitrary string that will be added to the cache key of the bundler cache. Set or change it if you need to invalidate the cache."
  working-directory:
    default: "."
    description: "The working directory to run the action in."
  tag:
    description: "The docker tag to use for the `rb-sys` images."
    default: "default"
  cargo-cache-clean:
    description: "Whether to clean the cargo cache after the build."
    default: "true"
  cache-save-always:
    description: "Whether to save the cache even if the build fails."
    default: "true"
outputs:
  gem-path:
    description: "The path to the cross-compiled gem"
    value: ${{ steps.set-outputs.outputs.gem-path }}
runs:
  using: "composite"
  steps:
    - name: Configure environment
      shell: bash
      run: |
        : Configure environment
        echo "RB_SYS_DOCK_UID=$(id -u)" >> $GITHUB_ENV
        echo "RB_SYS_DOCK_GID=$(id -g)" >> $GITHUB_ENV
        rb_sys_dock_cache_dir="$HOME/.cache/rb-sys-dock"
        mkdir -p "$rb_sys_dock_cache_dir"
        echo "RB_SYS_DOCK_CACHE_DIR=$rb_sys_dock_cache_dir" >> $GITHUB_ENV

    - name: Setup caching
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.RB_SYS_DOCK_CACHE_DIR }}
          ${{ inputs.working-directory }}/tmp/rb-sys-dock/${{ inputs.platform }}/target
        key: rb-sys-dock-${{ inputs.cache-version }}-${{ inputs.platform }}-${{ hashFiles('**/Gemfile.lock', '**/Cargo.lock') }}
        save-always: ${{ inputs.cache-save-always == 'true' }}
        restore-keys: |
          rb-sys-dock-${{ inputs.cache-version }}-${{ inputs.platform }}-

    - name: Install cargo-cache
      uses: oxidize-rb/actions/cargo-binstall@v1
      id: install-cargo-cache
      if: inputs.cargo-cache-clean == 'true'
      with:
        crate: cargo-cache
        version: 0.8.3
        strategies: quick-install

    - name: Clean the cargo cache
      if: inputs.cargo-cache-clean == 'true'
      uses: oxidize-rb/actions/post-run@v1
      with:
        run: cargo-cache --autoclean
        cwd: ${{ inputs.working-directory }}
        always: ${{ inputs.cache-save-always == 'true' }}

    - name: Build gem
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        INPUT_RUBY_VERSIONS: "${{ inputs.ruby-versions }}"
        INPUT_TAG: "${{ inputs.tag }}"
        INPUT_PLATFORM: "${{ inputs.platform }}"
        INPUT_PRE_SCRIPT: "${{ inputs.pre-script }}"
        INPUT_POST_SCRIPT: "${{ inputs.post-script }}"
      run: |
        : Compile gem
        set -x

        args=()
        args+=("--platform")
        args+=("$INPUT_PLATFORM")

        if [ "$INPUT_RUBY_VERSIONS" != "default" ]; then
          args+=("--ruby-versions")
          args+=("$INPUT_RUBY_VERSIONS")
        fi

        if [ "$INPUT_TAG" != "default" ]; then
          args+=("--tag")
          args+=("$INPUT_TAG")
        fi

        if bundle info rb_sys > /dev/null; then
          bundle exec rb-sys-dock "${args[@]}" --build
        else
          gem install rb_sys
          rb-sys-dock "${args[@]}" --build
        fi

    - name: Set outputs
      id: set-outputs
      shell: bash
      run: |
        : Set output
        echo "gem-path=$(find ${{ inputs.working-directory }}/pkg -name '*-${{ inputs.platform }}.gem')" >> $GITHUB_OUTPUT
